import{_ as a,o as e,c as d,e as h}from"./app-9e62998e.js";const i={},t=h('<h2 id="快捷键" tabindex="-1"><a class="header-anchor" href="#快捷键" aria-hidden="true">#</a> 快捷键</h2><ul><li>Tab：命令和文件名补全。</li><li>Ctrl+C：中断正在运行的程序。</li><li>Ctrl+D：结束输入界面（End Of File，EOF）。</li></ul><h2 id="帮助" tabindex="-1"><a class="header-anchor" href="#帮助" aria-hidden="true">#</a> 帮助</h2><h4 id="_1-help" tabindex="-1"><a class="header-anchor" href="#_1-help" aria-hidden="true">#</a> 1. --help</h4><p>指令的基本用法与选项介绍。如：<code>cd --help</code></p><h4 id="_2-man" tabindex="-1"><a class="header-anchor" href="#_2-man" aria-hidden="true">#</a> 2. man</h4><p>man 是 manual 的缩写，将指令的具体信息显示出来。如：<code>man cd</code></p><p>当执行 <code>man date</code> 时，有 DATE(1) 出现，其中的数字代表指令的类型，常用的数字及其类型如下：</p><table><thead><tr><th>代号</th><th>类型</th></tr></thead><tbody><tr><td>1</td><td>用户在 shell 环境中可以操作的指令或者可执行文件</td></tr><tr><td>5</td><td>配置文件</td></tr><tr><td>8</td><td>系统管理员可以使用的管理指令</td></tr></tbody></table><h4 id="_3-info" tabindex="-1"><a class="header-anchor" href="#_3-info" aria-hidden="true">#</a> 3. info</h4><p>info 与 man 类似，但是 info 将文档分成一个个页面，每个页面可以跳转。如：<code>info cd</code></p><h4 id="_4-doc" tabindex="-1"><a class="header-anchor" href="#_4-doc" aria-hidden="true">#</a> 4. doc</h4><p>/usr/share/doc 存放着软件的一整套说明文件。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p><em>doc</em> 不是命令！</p></div><h2 id="关机" tabindex="-1"><a class="header-anchor" href="#关机" aria-hidden="true">#</a> 关机</h2><h4 id="_1-who" tabindex="-1"><a class="header-anchor" href="#_1-who" aria-hidden="true">#</a> 1. who</h4><p>在关机前需要先使用 who 命令查看有没有其它用户在线。</p><h4 id="_2-sync" tabindex="-1"><a class="header-anchor" href="#_2-sync" aria-hidden="true">#</a> 2. sync</h4><p>为了加快对磁盘文件的读写速度，位于内存中的文件数据不会立即同步到磁盘，因此关机之前需要先进行 sync 同步操作。sync 命令可以将内存中的数据刷新到磁盘上，确保文件系统中磁盘和内存中的数据一致。</p><h4 id="_3-shutdown" tabindex="-1"><a class="header-anchor" href="#_3-shutdown" aria-hidden="true">#</a> 3. shutdown</h4><p>shutdown [-krhc] 时间 [信息]</p><ul><li>-k ： 不会关机，只是发送警告信息，通知所有在线的用户。</li><li>-r ： 将系统的服务停掉后就重新启动。</li><li>-h ： 将系统的服务停掉后就立即关机。</li><li>-c ： 取消已经在进行的 shutdown。</li></ul><p>如：</p><ul><li>立即关机：<code>shutdown -h now</code></li><li>十分钟后关机：<code>shutdown -h +10</code></li><li>重启：<code>shutdown -r now</code></li></ul><h2 id="sudo" tabindex="-1"><a class="header-anchor" href="#sudo" aria-hidden="true">#</a> sudo</h2><p>sudo 允许一般用户使用 root 可执行的命令，不过只有在 /etc/sudoers 配置文件中添加的用户才能使用该指令。如：<code>sudo apt-get update</code>。</p><h2 id="包管理工具" tabindex="-1"><a class="header-anchor" href="#包管理工具" aria-hidden="true">#</a> 包管理工具</h2><p>包管理工具是一种用于安装、更新、卸载软件包（或库）的软件程序。在开发中，我们通常需要使用各种各样的 <em>库</em> 或 <em>框架</em> 来完成项目任务。这些库通常是由其他人或者组织编写的，我们可以通过包管理工具将这些库下载到本地，并在自己的项目中使用它们。包管理工具可以帮助我们自动完成与第三方库的版本管理，安装，更新以及在项目之间切换等任务。</p><p>一般情况下，包管理工具主要用于下载和管理代码库。不过在某些情况下，某些包管理工具也可以通过软件仓库或源，安装操作系统软件，如 Ubuntu 的<code>apt-get</code>和 CentOS 的<code>yum</code>。</p><p>RPM 和 DPKG 为最常见的两类软件包管理工具：</p><ul><li>RPM 全称为 Redhat Package Manager，最早由 Red Hat 公司制定实施，随后被 GNU 开源操作系统接受并成为许多 Linux 系统的既定软件标准。YUM 基于 RPM，具有依赖管理和软件升级功能。</li><li>与 RPM 竞争的是基于 Debian 操作系统的 DEB 软件包管理工具 DPKG，全称为 Debian Package，功能方面与 RPM 相似。</li></ul>',31),n=[t];function r(o,c){return e(),d("div",null,n)}const s=a(i,[["render",r],["__file","changyongcaozuoyijigainian.html.vue"]]);export{s as default};
