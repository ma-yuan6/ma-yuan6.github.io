import{_ as d,r as t,o as l,c,a as e,b as a,d as n,e as i}from"./app-d188f79b.js";const r={},h=i('<h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h1><h2 id="硬件与软件" tabindex="-1"><a class="header-anchor" href="#硬件与软件" aria-hidden="true">#</a> 硬件与软件</h2><p>我们所熟知的计算机是由 <em>硬件</em> 和 <em>软件</em> 所组成。</p><ul><li>硬件：计算机中由电子，机械和光电元件等组成的各种物理装置。如：CPU、硬盘、网卡等。</li><li>软件：是用户和计算机硬件之间的接口和桥梁，用户通过软件与计算机进行交互。</li></ul><h2 id="操作系统" tabindex="-1"><a class="header-anchor" href="#操作系统" aria-hidden="true">#</a> 操作系统</h2><p>操作系统是计算机软件的一种，它主要负责作为用户和计算机硬件之间的桥梁，调度和管理计算机硬件进行工作。计算机如果没有操作系统，就是一堆无法使用的废料而已。</p><p>当计算机拥有了操作系统，就相当于拥有了灵魂。操作系统可以：调度 CPU 进行工作、调度内存进行工作、调度硬盘进行数据存储、调度网卡进行网络通讯、调度音响发出声音等等。</p><p>Linux 也属于操作系统，它广泛应用于 <em>服务器</em> 和 <em>嵌入式</em> 。最重要的是它是免费开源的。</p><p>常见的操作系统有：</p><ul><li><p>PC 端：</p><ul><li>Windows （微软）</li><li>macOS （苹果）</li></ul></li><li><p>移动端</p><ul><li>Android（谷歌）</li><li>iOS （苹果）</li><li>Harmony OS（华为）</li></ul></li></ul><h2 id="linux-内核与发行版" tabindex="-1"><a class="header-anchor" href="#linux-内核与发行版" aria-hidden="true">#</a> Linux 内核与发行版</h2><p>Linux 系统由 <em>Linux 系统内核</em> 、 <em>系统级应用程序</em> 两部分组成。内核提供系统最核心的功能，如：调度CPU、调度内存、调度文件系统、调度网络通讯、调度 IO 等。系统级应用程序，可以理解为出厂自带程序，可供用户快速上手操作系统，如：文件管理器、任务管理器、图片查看、音乐播放等。</p><p>提供了 <em>内核 + 系统级程序</em> 完整封装的，称之为 <em><strong>Linux发行版</strong></em> 。</p><p>因为 Linux 内核是免费开源的，任何人都可以获得并修改内核，并且自行开发系统级程序。所以目前市面上存在非常多的 Linux 发行版，常用的、知名的有：Ubuntu、Fedora、CentOS、Debian 等等。</p>',14),p={class:"hint-container tip"},s=e("p",{class:"hint-container-title"},"提示",-1),u={href:"https://www.vmware.com/cn/products/workstation-pro.html",target:"_blank",rel:"noopener noreferrer"},x=e("p",null,"关于虚拟机就不详细介绍了，可以自己网上查查。",-1),m=i('<h2 id="一些基础知识" tabindex="-1"><a class="header-anchor" href="#一些基础知识" aria-hidden="true">#</a> 一些基础知识</h2><p>为了接下来更好的学习 Linux 命令, 所以将一些简单的基础知识放在这一并讲了。</p><h3 id="linux-的目录结构" tabindex="-1"><a class="header-anchor" href="#linux-的目录结构" aria-hidden="true">#</a> Linux 的目录结构</h3><p><img src="https://s2.loli.net/2024/03/16/oWIBTgkOq98Ryl7.jpg" alt="linux目录结构"></p><ul><li><p>Linux不分盘符，<code>/</code> 根目录是最顶级的目录。</p></li><li><p>Linux只有一个顶级目录：<code>/</code> 。</p></li><li><p>路径描述的层次关系同样适用<code>/</code>来表示。</p><p><code>/home/ma/a.txt</code>表示根目录下的 home 文件夹内有 ma 文件夹，ma 文件夹内有 a.txt 文件。</p></li></ul><h3 id="home-目录" tabindex="-1"><a class="header-anchor" href="#home-目录" aria-hidden="true">#</a> HOME 目录</h3><p>每一个用户在Linux系统中都有自己的专属工作目录，称之为HOME目录。</p><ul><li><p>普通用户的 HOME 目录默认在：<code>/home/&lt;用户名&gt;</code> 。</p></li><li><p>root 用户的 HOME 目录在：<code>/root </code>。</p></li></ul><h3 id="相对路径、绝对路径" tabindex="-1"><a class="header-anchor" href="#相对路径、绝对路径" aria-hidden="true">#</a> 相对路径、绝对路径</h3><ul><li><p>相对路径， 非 <code>/</code>开头的称为 <em><strong>相对路径</strong></em> 。</p><p>相对路径表示以 <em>当前目录</em> 作为起点，去描述路径，如<code>test/a.txt</code>，表示当前工作目录内的 test 文件夹内的 a.txt 文件。</p></li><li><p>绝对路径，以<code>/</code>开头的称之为绝对路径。</p><p>绝对路径从 <em>根路径</em> 开始描述路径。</p></li></ul><h3 id="特殊路径符" tabindex="-1"><a class="header-anchor" href="#特殊路径符" aria-hidden="true">#</a> 特殊路径符</h3><ul><li><code>.</code> 表示当前，比如<code>./a.txt</code>表示当前文件夹内的 a.txt 文件。</li><li><code>..</code> 表示上级目录，比如<code>../</code>表示上级目录，<code>../../</code>表示上级的上级目录。</li><li><code>~</code> 表示用户的HOME目录，比如<code>cd ~</code>，即可切回用户 HOME 目录。</li></ul><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h3><ul><li>临时设置：export 变量名 = 变量值。</li><li>永久设置： <ul><li>针对用户，设置用户 HOME 目录内：<code>.bashrc</code>文件。</li><li>针对全局，设置<code>/etc/profile</code>。</li></ul></li></ul><h3 id="path-变量" tabindex="-1"><a class="header-anchor" href="#path-变量" aria-hidden="true">#</a> PATH 变量</h3><p>记录了执行程序的搜索路径，可以将自定义路径加入 PATH 内，实现自定义命令在任意地方均可执行的效果。</p><h3 id="符号" tabindex="-1"><a class="header-anchor" href="#符号" aria-hidden="true">#</a> $ 符号</h3><p>可以取出指定的环境变量的值。</p><p>语法：<code>$变量名</code></p><p>示例：</p><p><code>echo $PATH</code>，输出PATH环境变量的值。</p><p><code>echo ${PATH}ABC</code>，输出 PATH 环境变量的值以及 ABC 。</p>',22);function _(f,b){const o=t("ExternalLinkIcon");return l(),c("div",null,[h,e("div",p,[s,e("p",null,[a("要想在本机使用 Linux 可以使用虚拟机，例如： "),e("a",u,[a("VMware Workstation Pro"),n(o)]),a(" 。")]),x]),m])}const H=d(r,[["render",_],["__file","chushiLinux.html.vue"]]);export{H as default};
