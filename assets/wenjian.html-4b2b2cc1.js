import{_ as d,r,o as l,c as h,a as i,b as e,d as n,e as c}from"./app-d188f79b.js";const t={},o=i("h2",{id:"说明",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#说明","aria-hidden":"true"},"#"),e(" 说明")],-1),s={href:"https://man.niaoge.com/",target:"_blank",rel:"noopener noreferrer"},p=c(`<h2 id="文件属性" tabindex="-1"><a class="header-anchor" href="#文件属性" aria-hidden="true">#</a> 文件属性</h2><p>用户分为三种：文件拥有者、群组以及其它人，对不同的用户有不同的文件权限。</p><p>使用 ls 查看一个文件时，会显示一个文件的信息，例如 <code>drwxr-xr-x 3 root root 17 May 6 00:14 .config</code>，对这个信息的解释如下：</p><ul><li>drwxr-xr-x：文件类型以及权限，第 1 位为文件类型字段，后 9 位为文件权限字段</li><li>3：链接数</li><li>root：文件拥有者</li><li>root：所属群组</li><li>17：文件大小</li><li>May 6 00:14：文件最后被修改的时间</li><li>.config：文件名</li></ul><p>常见的文件类型及其含义有：</p><ul><li>d：目录</li><li>-：文件</li><li>l：链接文件</li></ul><p>9 位的文件权限字段中，每 3 个为一组，共 3 组，每一组分别代表对文件拥有者、所属群组以及其它人的文件权限。一组权限中的 3 位分别为 r、w、x 权限，表示可读、可写、可执行。</p><p>文件时间有以下三种：</p><ul><li>modification time (mtime)：文件的内容更新就会更新。</li><li>status time (ctime)：文件的状态（权限、属性）更新就会更新。</li><li>access time (atime)：读取文件时就会更新。</li></ul><h2 id="文件与目录的基本操作" tabindex="-1"><a class="header-anchor" href="#文件与目录的基本操作" aria-hidden="true">#</a> 文件与目录的基本操作</h2><h4 id="_1-ls" tabindex="-1"><a class="header-anchor" href="#_1-ls" aria-hidden="true">#</a> 1. ls</h4><p>列出文件或者目录的信息，目录的信息就是其中包含的文件。 <code>ls [-aAdfFhilnrRSt] 文件或文件夹</code></p><ul><li>-a ：列出全部的文件</li><li>-d ：仅列出目录本身</li><li>-l ：以长数据串行列出，包含文件的属性与权限等等数据</li></ul><div class="hint-container tip"><p class="hint-container-title">符号说明</p><p>[ ] 表示可选参数。这里只讲解部分重要参数，其余自行查阅。</p></div><h4 id="_2-cd" tabindex="-1"><a class="header-anchor" href="#_2-cd" aria-hidden="true">#</a> 2. cd</h4><p>更换当前目录。 <code>cd [相对路径或绝对路径]</code></p><h4 id="_3-mkdir" tabindex="-1"><a class="header-anchor" href="#_3-mkdir" aria-hidden="true">#</a> 3. mkdir</h4><p>创建目录。 <code>mkdir [-mp] 目录名称</code></p><ul><li>-m ：配置目录权限</li><li>-p ：递归创建目录</li></ul><h4 id="_4-rmdir" tabindex="-1"><a class="header-anchor" href="#_4-rmdir" aria-hidden="true">#</a> 4. rmdir</h4><p>删除目录，目录必须为空。 <code>rmdir [-p] 目录名称</code></p><ul><li>-m ：配置目录权限</li><li>-p ：递归创建目录</li></ul><h4 id="_5-touch" tabindex="-1"><a class="header-anchor" href="#_5-touch" aria-hidden="true">#</a> 5. touch</h4><p>更新文件时间或者建立新文件。 <code>touch [-acdmt] filename</code></p><ul><li>-a ： 更新 atime</li><li>-c ： 更新 ctime，若该文件不存在则不建立新文件</li><li>-m： 更新 mtime</li><li>-d ： 后面可以接更新日期而不使用当前日期，也可以使用 --date=&quot;日期或时间&quot;</li><li>-t ： 后面可以接更新时间而不使用当前时间，格式为[YYYYMMDDhhmm]</li></ul><h4 id="_6-cp" tabindex="-1"><a class="header-anchor" href="#_6-cp" aria-hidden="true">#</a> 6. cp</h4><p>复制文件。如果源文件有两个以上，则目的文件一定要是目录才行。 <code>cp [-adfilprsu] source destination</code></p><ul><li>-a ：相当于 -dr --preserve=all</li><li>-d ：若来源文件为链接文件，则复制链接文件属性而非文件本身</li><li>-i ：若目标文件已经存在时，在覆盖前会先询问</li><li>-p ：连同文件的属性一起复制过去</li><li>-r ：递归复制</li><li>-u ：destination 比 source 旧才更新 destination，或 destination 不存在的情况下才复制</li><li>--preserve=all ：除了 -p 的权限相关参数外，还加入 SELinux 的属性, links, xattr 等也复制了</li></ul><h4 id="_7-rm" tabindex="-1"><a class="header-anchor" href="#_7-rm" aria-hidden="true">#</a> 7. rm</h4><p>删除文件。 <code>rm [-fir] 文件或目录</code></p><ul><li>r ：递归删除</li></ul><h4 id="_8-mv" tabindex="-1"><a class="header-anchor" href="#_8-mv" aria-hidden="true">#</a> 8. mv</h4><p>移动文件。 <code>mv [-fiu] source destination</code></p><ul><li>-f ： force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖</li></ul><h3 id="修改权限" tabindex="-1"><a class="header-anchor" href="#修改权限" aria-hidden="true">#</a> 修改权限</h3><p>可以将一组权限用数字来表示，此时一组权限的 3 个位当做二进制数字的位，从左到右每个位的权值为 4、2、1，即每个权限对应的数字权值为 r : 4、w : 2、x : 1。<code>chmod [-R] xyz 文件或文件夹</code></p><p>示例：将 .bashrc 文件的权限修改为 -rwxr-xr--。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">754</span> .bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以使用符号来设定权限。 <code>chmod [ugoa] [+-=] [rwx] 文件或文件夹</code></p><ul><li>-u：拥有者</li><li>-g：所属群组</li><li>-o：其他人</li><li>-a：所有人</li><li>+：添加权限</li><li>-：移除权限</li><li>=：设定权限</li></ul><p>示例：为 .bashrc 文件的所有用户添加写权限。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> a+w .bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="默认权限" tabindex="-1"><a class="header-anchor" href="#默认权限" aria-hidden="true">#</a> 默认权限</h3><ul><li>文件默认权限：文件默认没有可执行权限，因此为 666，也就是 -rw-rw-rw- 。</li><li>目录默认权限：目录必须要能够进入，也就是必须拥有可执行权限，因此为 777 ，也就是 drwxrwxrwx。</li></ul><p>可以通过 umask 设置或者查看默认权限，通常以掩码的形式来表示，例如 002 表示其它用户的权限去除了一个 2 的权限，也就是写权限，因此建立新文件时默认的权限为 -rw-rw-r--。</p><h3 id="目录的权限" tabindex="-1"><a class="header-anchor" href="#目录的权限" aria-hidden="true">#</a> 目录的权限</h3><p>文件名不是存储在一个文件的内容中，而是存储在一个文件所在的目录中。因此，拥有文件的 w 权限并不能对文件名进行修改。</p><p>目录存储文件列表，一个目录的权限也就是对其文件列表的权限。因此，目录的 r 权限表示可以读取文件列表；w 权限表示可以修改文件列表，具体来说，就是添加删除文件，对文件名进行修改；x 权限可以让该目录成为工作目录，x 权限是 r 和 w 权限的基础，如果不能使一个目录成为工作目录，也就没办法读取文件列表以及对文件列表进行修改了。</p><h3 id="获取文件内容" tabindex="-1"><a class="header-anchor" href="#获取文件内容" aria-hidden="true">#</a> 获取文件内容</h3><h4 id="_1-cat" tabindex="-1"><a class="header-anchor" href="#_1-cat" aria-hidden="true">#</a> 1. cat</h4><p>取得文件内容。 <code>cat [-AbEnTv] 文件名</code></p><ul><li>-n ：打印出行号，连同空白行也会有行号，-b 不会</li></ul><h4 id="_2-tac" tabindex="-1"><a class="header-anchor" href="#_2-tac" aria-hidden="true">#</a> 2. tac</h4><p>是 cat 的反向操作，从最后一行开始打印。</p><h4 id="_3-more" tabindex="-1"><a class="header-anchor" href="#_3-more" aria-hidden="true">#</a> 3. more</h4><p>和 cat 不同的是它可以一页一页查看文件内容，比较适合大文件的查看。</p><h4 id="_4-less" tabindex="-1"><a class="header-anchor" href="#_4-less" aria-hidden="true">#</a> 4. less</h4><p>和 more 类似，但是多了一个向前翻页的功能。</p><h4 id="_5-head" tabindex="-1"><a class="header-anchor" href="#_5-head" aria-hidden="true">#</a> 5. head</h4><p>取得文件前几行。 <code>head [-n number] 文件名</code></p><ul><li>-n ：后面接数字，代表显示几行的意思</li></ul><h4 id="_6-tail" tabindex="-1"><a class="header-anchor" href="#_6-tail" aria-hidden="true">#</a> 6. tail</h4><p>是 head 的反向操作，只是取得是后几行。</p><h4 id="_7-od" tabindex="-1"><a class="header-anchor" href="#_7-od" aria-hidden="true">#</a> 7. od</h4><p>以字符或者十六进制的形式显示二进制文件。</p><h3 id="指令与文件搜索" tabindex="-1"><a class="header-anchor" href="#指令与文件搜索" aria-hidden="true">#</a> 指令与文件搜索</h3><h4 id="_1-which" tabindex="-1"><a class="header-anchor" href="#_1-which" aria-hidden="true">#</a> 1. which</h4><p>指令搜索。<code>which [-a] 指令</code></p><ul><li>-a ：将所有指令列出，而不是只列第一个</li></ul><h4 id="_2-whereis" tabindex="-1"><a class="header-anchor" href="#_2-whereis" aria-hidden="true">#</a> 2. whereis</h4><p>文件搜索。速度比较快，因为它只搜索几个特定的目录。 <code>whereis [-bmsu] 文件或文件夹</code></p><h4 id="_3-locate" tabindex="-1"><a class="header-anchor" href="#_3-locate" aria-hidden="true">#</a> 3. locate</h4><p>文件搜索。可以用关键字或者正则表达式进行搜索。</p><p>locate 使用 /var/lib/mlocate/ 这个数据库来进行搜索，它存储在内存中，并且每天更新一次，所以无法用 locate 搜索新建的文件。可以使用 updatedb 来立即更新数据库。 <code>locate [-ir] keyword</code></p><ul><li>-r：正则表达式</li></ul><h4 id="_4-find" tabindex="-1"><a class="header-anchor" href="#_4-find" aria-hidden="true">#</a> 4. find</h4><p>文件搜索。可以使用文件的属性和权限进行搜索。 <code>find [basedir] [option]</code></p><p>如：<code>find . -name &quot;shadow*&quot;</code></p><p><strong>① 与时间有关的选项</strong></p><ul><li>-mtime n ：列出在 n 天前的那一天修改过内容的文件</li><li>-mtime +n ：列出在 n 天之前 (不含 n 天本身) 修改过内容的文件</li><li>-mtime -n ：列出在 n 天之内 (含 n 天本身) 修改过内容的文件</li><li>-newer file ： 列出比 file 更新的文件</li></ul><p>+4、4 和 -4 的指示的时间范围如下：</p><p><img src="https://s2.loli.net/2024/03/16/xmqU2sRdAGM8y53.png" alt="time"></p><p><strong>② 与文件拥有者和所属群组有关的选项</strong></p><ul><li>-uid n</li><li>-gid n</li><li>-user name</li><li>-group name</li><li>-nouser ：搜索拥有者不存在 /etc/passwd 的文件</li><li>-nogroup：搜索所属群组不存在于 /etc/group 的文件</li></ul><p><strong>③ 与文件权限和名称有关的选项</strong></p><ul><li>-name filename</li><li>-size [+-]SIZE：搜寻比 SIZE 还要大 (+) 或小 (-) 的文件。这个 SIZE 的规格有：c: 代表 byte，k: 代表 1024bytes。所以，要找比50KB 还要大的文件，就是 -size +50k</li><li>-type TYPE</li><li>-perm mode ：搜索权限等于 mode 的文件</li><li>-perm -mode ：搜索权限包含 mode 的文件 <ul><li>-perm /mode ：搜索权限包含任 一 mode 的文件</li></ul></li></ul>`,86);function u(m,_){const a=r("ExternalLinkIcon");return l(),h("div",null,[o,i("p",null,[e("首先说明一下这些东西不用像背单词一样背下来，只需要找到有一个这样的命令可以达到怎么样的作用。等用到的时候再去网上查就行。推荐去 "),i("a",s,[e("这里"),n(a)]),e(" 。然后，在说明一下关于 Linux 我不可能全部都讲完也没有必要，所以看看就好。我也就有时候没事干的时候会写写，不会常更新。")]),p])}const x=d(t,[["render",u],["__file","wenjian.html.vue"]]);export{x as default};
