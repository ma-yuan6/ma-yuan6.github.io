import{_ as t,r as e,o,c as i,a as n,b as s,d as l,e as a}from"./app-9e62998e.js";const c="/assets/键盘02-e3fe525d.png",u={},r=a(`<h2 id="什么是gui自动化" tabindex="-1"><a class="header-anchor" href="#什么是gui自动化" aria-hidden="true">#</a> 什么是GUI自动化</h2><p>GUI自动化就是写程序直接控制键盘和鼠标。这些程序可以控制其他应用，向它们发送虚拟的击键和鼠标点击，就像你自己坐在计算机前与应用交互一样。这种技术被称为“图形用户界面自动化”，或简称为“GUI 自动化”。对于涉及许多无脑点击或填表的任务，这种技术特别有用。</p><h2 id="环境安装" tabindex="-1"><a class="header-anchor" href="#环境安装" aria-hidden="true">#</a> 环境安装</h2><p>安装 pyautogui 模块</p><ul><li><p>pyautogui 模块可以向 Windows、OS X 和 Linux 发送虚拟按键和鼠标点击。根据你使用的操作系统，在安装 pyautogui 之前，可能需要安装一些其他依赖模块</p><ul><li>在 Windows 上，不需要安装其他模块。</li><li>在 OS X 上，运行 sudo pip3 install pyobjc-framework-Quartz、sudo pip3 install pyobjc-core、sudo pip3 install pyobjc。</li><li>Linux 上，运行 sudo pip3 install python3-xlib、sudo apt-get install scrot、sudo apt-get install python3-tk以及 sudo apt-get install python3-dev（Scrot 是PyAutoGUI 使用的屏幕快照程序）。</li></ul></li><li><p>在这些依赖安装后，运行 pip install pyautogui</p></li></ul><h2 id="控制鼠标移动" tabindex="-1"><a class="header-anchor" href="#控制鼠标移动" aria-hidden="true">#</a> 控制鼠标移动</h2><p>我们主要学习如何利用 pyautogui 移动鼠标，追踪它在屏幕上的位置，但首先需要理解 pyautogui 如何处理坐标</p><ul><li><p>pyautogui坐标的处理</p><ul><li>pyautogui 的鼠标函数使用 x、y 坐标。原点的 x、y 都是零，在屏幕的左上角。向右 x 坐标增加，向下 y 坐标增加。所有坐标都是正整数，没有负数坐标。</li></ul></li><li><p>分辨率</p><ul><li>分辨率是屏幕的宽和高有多少像素。如果屏幕的分辨率设置为 1920 × 1080，那么左上角的坐标是（0，0），右下角的坐标是（1919，1079）。</li></ul></li><li><p>获取电脑屏幕的宽和高的像素数</p><ul><li>pyautogui.size() 函数返回两个整数的元组，包含屏幕的宽和高的像素数</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui

width<span class="token punctuation">,</span> height <span class="token operator">=</span> pyautogui<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>理解了屏幕坐标，我们就可以来移动鼠标。</p><ul><li>pyautogui.moveTo() 函数将鼠标立即移动到屏幕的 <em>指定位置</em>。 <ul><li>表示 x、y 坐标的整数值分别构成了函数的第一个和第二个参数。</li><li>可选的 duration 整数或浮点数关键字参数，指定了将鼠标移到目的位置所需的秒数。如果不指定，默认值是零，表示立即移动（在 PyAutoGUI 函数中，所有的 duration 关键字参数都是可选的）。</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    pyautogui<span class="token punctuation">.</span>moveTo<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>
    pyautogui<span class="token punctuation">.</span>moveTo<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>
    pyautogui<span class="token punctuation">.</span>moveTo<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>
    pyautogui<span class="token punctuation">.</span>moveTo<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>pyautogui.moveRel() 函数相对于 <em>当前位置</em> 移动鼠标 <ul><li>该函数可以接受 3 个参数：向右水平移动多少个像素，向下垂直移动多少个像素，以及（可选的）花多少时间完成移动。为第一第二个参数提供负整数，鼠标将向左或向上移动。</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    pyautogui<span class="token punctuation">.</span>moveRel<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>
    pyautogui<span class="token punctuation">.</span>moveRel<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>
    pyautogui<span class="token punctuation">.</span>moveRel<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>
    pyautogui<span class="token punctuation">.</span>moveRel<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>获取鼠标位置 <ul><li>通过调用 pyautogui.position() 函数，可以确定鼠标当前的位置。它将返回函数调用时，鼠标 x、y 坐标的元组。</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>pyautogui<span class="token punctuation">.</span>position<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="控制鼠标交互" tabindex="-1"><a class="header-anchor" href="#控制鼠标交互" aria-hidden="true">#</a> 控制鼠标交互</h2><p>既然我们知道了如何移动鼠标，弄清楚了它在屏幕上的位置，就可以开始点击、拖动和滚动鼠标。</p><h3 id="点击鼠标" tabindex="-1"><a class="header-anchor" href="#点击鼠标" aria-hidden="true">#</a> 点击鼠标</h3><p>调用 pyautogui.click() 方法进行鼠标点击</p><ul><li>默认情况下，点击将使用鼠标左键，点击发生在鼠标当前所在位置。如果希望点击在鼠标当前位置以外的地方发生，可以传入 x、y 坐标作为可选的第一第二参数。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 实现：鼠标移到屏幕左上角的位置，并点击一次。</span>
<span class="token comment"># 完整的“点击”是指按下鼠标按键，然后放开，同时不移动位置</span>
<span class="token keyword">import</span> pyautogui

pyautogui<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果想指定鼠标按键，就加入 button 关键字参数，值分别为 &#39;left&#39;、&#39;middle&#39;或 &#39;right&#39;。例如，pyautogui.click（100，150，button=&#39;left&#39;）将在坐标（100，150）处点击鼠标左键。而 pyautogui.click（200，250，button=&#39;right&#39;）将在坐标（200，250）处点击右键。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui

pyautogui<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">509</span><span class="token punctuation">,</span> button<span class="token operator">=</span><span class="token string">&#39;right&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>实现点击的其他方法</p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>pyautogui. mouseDown()</td><td>只是按下鼠标按键</td></tr><tr><td>pyautogui.mouseUp()</td><td>只是释放鼠标按键</td></tr><tr><td>pyautogui.doubleClick()</td><td>双击鼠标左键</td></tr><tr><td>pyautogui.rightClick()</td><td>双击右键</td></tr><tr><td>pyautogui.middleClick()</td><td>双击中键</td></tr></tbody></table></li></ul><h3 id="拖动鼠标" tabindex="-1"><a class="header-anchor" href="#拖动鼠标" aria-hidden="true">#</a> 拖动鼠标</h3><p>“拖动”意味着移动鼠标，同时按住一个按键不放。例如，可以通过拖动文件图标，在文件夹之间移动文件等。</p>`,27),d=n("li",null,[n("p",null,"具体操作"),n("ul",null,[n("li",null,"PyAutoGUI 提供了 pyautogui.dragTo() 和 pyautogui.dragRel() 函数，将鼠标拖动到一个新的位置，或相对当前位置的位置。 dragTo() 和 dragRel() 的参数与moveTo() 和 moveRel() 相同：x 坐标/水平移动，y 坐标/垂直移动，以及可选的时间间隔（在 OS X 上，如果鼠标移动太快，拖动会不对，所以建议提供 duration 关键字参数）。")])],-1),k=n("p",null,"测试",-1),m={href:"http://sumopaint.com/",target:"_blank",rel:"noopener noreferrer"},v=a(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui<span class="token punctuation">,</span> time

time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
distance <span class="token operator">=</span> <span class="token number">200</span>
<span class="token keyword">while</span> distance <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
    pyautogui<span class="token punctuation">.</span>dragRel<span class="token punctuation">(</span>distance<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span> button<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># move right</span>
    distance <span class="token operator">=</span> distance <span class="token operator">-</span> <span class="token number">5</span>
    pyautogui<span class="token punctuation">.</span>dragRel<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> distance<span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span> button<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># move down</span>
    pyautogui<span class="token punctuation">.</span>dragRel<span class="token punctuation">(</span><span class="token operator">-</span>distance<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span> button<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># move left</span>
    distance <span class="token operator">=</span> distance <span class="token operator">-</span> <span class="token number">5</span>
    pyautogui<span class="token punctuation">.</span>dragRel<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>distance<span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span> button<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># move up</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意：如果出现如下报错信息 <ul><li>AssertionError: button argument not in (&#39;left&#39;, &#39;middle&#39;, &#39;right&#39;)，则在函数中添加button参数指定鼠标按键即可</li></ul></li></ul><h3 id="滚动鼠标" tabindex="-1"><a class="header-anchor" href="#滚动鼠标" aria-hidden="true">#</a> 滚动鼠标</h3><p>最后一个 pyautogui 鼠标函数是 scroll()。你向它提供一个整型参数，说明向上或向下滚动多少单位，滚动发生在鼠标的当前位置。</p><ul><li>单位的意义在每个操作系统和应用上不一样，所以你必须试验，看看在你的情况下滚动多远。</li><li>传递正整数表示向上滚动，传递负整数表示向下滚动</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui<span class="token punctuation">,</span> time

time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>scroll<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">300</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="处理屏幕" tabindex="-1"><a class="header-anchor" href="#处理屏幕" aria-hidden="true">#</a> 处理屏幕</h2><p>你的 GUI 自动化程序没有必要盲目地点击和输入。pyautogui 拥有屏幕快照的功能，可以根据当前屏幕的内容创建图形文件。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>在 Linux 计算机上，需要安装 scrot 程序，才能在 pyautogui 中使用屏幕快照功能。在终端窗口中，执行 sudo apt-get install scrot，安装该程序。如果你使用 Windows或 OS X，就跳过这一步</p></div><h3 id="获取屏幕快照" tabindex="-1"><a class="header-anchor" href="#获取屏幕快照" aria-hidden="true">#</a> 获取屏幕快照</h3><ul><li>要在 Python 中获取屏幕快照，就调用 pyautogui.screenshot() 函数,函数将返回包含一个屏幕快照的 Image 对象</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui

im <span class="token operator">=</span> pyautogui<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>
im<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&#39;./123.png&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Image对的getpixel()方法 <ul><li>getpixel() 函数传入 <em>坐标元组</em> 它将告诉你图像中这些坐标处的像素颜色。getpixel() 函数的返回值是一个 RGB 元组，包含 4 个整数，表示像素的红绿蓝值和透明度。这就是你的程序“看到”当前屏幕上内容的方法。</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui

im<span class="token punctuation">.</span>getpixel<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">560</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>(245, 246, 246, 255)
</code></pre><h3 id="分析屏幕快照" tabindex="-1"><a class="header-anchor" href="#分析屏幕快照" aria-hidden="true">#</a> 分析屏幕快照</h3><ul><li><p>举个栗子：</p><ul><li>假设你的 GUI 自动化程序中，有一步是点击灰色按钮。在调用 click() 方法之前，你可以获取屏幕快照，查看脚本要点击处的像素。如果它的颜色和灰色按钮不一样，那么程序就知道出问题了。也许窗口发生了意外的移动，或者弹出式对话框挡住了该按钮。这时，不应该继续（可能会点击到错误的东西，造成严重破坏），程序可以“看到”它没有点击在正确的东西上，并自行停止。</li></ul></li><li><p>pixelMatchesColor() 函数</p><ul><li>参数： <ul><li>第一和第二个参数是整数，对应 x 和 y 坐标。第三个参数是一个元组，包含 3 个整数，是屏幕像素必须匹配的 RGB 颜色</li></ul></li><li>返回值： <ul><li>如果屏幕上指定的 x、y 坐标处的像素与指定的颜色匹配，PyAutoGUI 的pixelMatchesColor() 函数将返回 True。</li></ul></li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui

im <span class="token operator">=</span> pyautogui<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>im<span class="token punctuation">.</span>getpixel<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
result <span class="token operator">=</span> pyautogui<span class="token punctuation">.</span>pixelMatchesColor<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">248</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>(248, 248, 248, 255)
False
</code></pre><h3 id="图像识别" tabindex="-1"><a class="header-anchor" href="#图像识别" aria-hidden="true">#</a> 图像识别</h3><ul><li><p>opencv简介</p><ul><li>Opencv（Open Source Computer Vision Library）是一个基于开源发行的跨平台计算机视觉库，它实现了图像处理和计算机视觉方面的很多通用算法，已成为计算机视觉领域最有力的研究工具。</li><li>在这里我们要区分两个概念：图像处理和计算机视觉的区别： <ul><li>图像处理侧重于“处理”图像--如增强，还原，去噪，分割等等；</li><li>而计算机视觉重点在于使用计算机来模拟人的视觉，因此模拟才是计算机视觉领域的最终目标。</li></ul></li></ul></li><li><p>opencv环境安装：</p><ul><li>pip install opencv-python==3.4.5.20</li></ul></li><li><p>测试</p></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果事先不知道应该点击哪里，怎么办？可以使用图像识别。向PyAutoGUI 提供希望点击的图像，让它去弄清楚坐标。</p><p>如下面程序双击打开微信</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2
<span class="token keyword">import</span> pyautogui
<span class="token keyword">import</span> time

time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment"># 获取带有腾讯会议的屏幕快照且保存到本地</span>
im <span class="token operator">=</span> pyautogui<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>
im<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&#39;screen.png&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 基于cv2读取照片</span>
screen <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./screen.png&#39;</span><span class="token punctuation">)</span>
joinMeeting <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./wechat.png&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 在屏幕快照中对比加入会议按钮照片，定位其准确位置</span>
result <span class="token operator">=</span> cv2<span class="token punctuation">.</span>matchTemplate<span class="token punctuation">(</span>joinMeeting<span class="token punctuation">,</span> screen<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>TM_CCOEFF_NORMED<span class="token punctuation">)</span>
<span class="token comment"># result是一个二维列表</span>
<span class="token comment"># 列表中最大值元素的位置就是我们对比后相似度最高的图片【最上角】位置</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>

<span class="token comment"># minMaxLoc返回一个元组，其中三个元素</span>
<span class="token comment"># 为最不相似点分数，最相似点分数，最不相似点位置坐标，最相似点位置坐标</span>
pos_start <span class="token operator">=</span> cv2<span class="token punctuation">.</span>minMaxLoc<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>  <span class="token comment"># 获取最相似点相似坐标</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>pos_start<span class="token punctuation">)</span>
<span class="token comment"># x = pos_start[0]</span>
<span class="token comment"># y = pos_start[1]</span>

<span class="token comment"># 定位到点击图片的中间位置</span>
x <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>pos_start<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>joinMeeting<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>pos_start<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>joinMeeting<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>

time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>doubleClick<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[[-0.03300207 -0.02343242 -0.01220054 ...  0.01368432  0.00978351
   0.00445915]
 [-0.04668754 -0.03740807 -0.02737257 ... -0.0142258  -0.01773539
  -0.0223386 ]
 [-0.05514864 -0.04633744 -0.03648057 ... -0.02022694 -0.02312695
  -0.02617623]
 ...
 [-0.12414803 -0.10688399 -0.08685119 ...  0.03991041  0.04926782
   0.05959205]
 [-0.12446044 -0.10724287 -0.08728681 ...  0.05305367  0.06296983
   0.0739925 ]
 [-0.12511653 -0.10798857 -0.08818725 ...  0.04885091  0.05691899
   0.06510597]]
(874, 175)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="控制键盘" tabindex="-1"><a class="header-anchor" href="#控制键盘" aria-hidden="true">#</a> 控制键盘</h2><p>pyautogui 也有一些函数向计算机发送虚拟按键，让你能够填充表格，或在应用中输入文本。</p><h3 id="通过键盘发送一个字符串" tabindex="-1"><a class="header-anchor" href="#通过键盘发送一个字符串" aria-hidden="true">#</a> 通过键盘发送一个字符串</h3><p>pyautogui.typewrite() 函数向计算机发送虚拟按键。这些按键产生什么效果，取决于当前获得焦点的窗口和文本输入框。可能需要先向文本输入框发送一次鼠标点击，确保它获得焦点。</p><p>举一个简单的例子，让我们用 Python 自动化在文件编辑窗口中输入 Helloworld!。首先，打开一个新的文件编辑窗口，将它放在屏幕的左上角，以便pyautogui 点击正确的位置，让它获得焦点</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui
<span class="token keyword">import</span> time

time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>typewrite<span class="token punctuation">(</span><span class="token string">&#39;Hello world!&#39;</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>typewrite()参数介绍： <ul><li><p>message：键盘录入的内容</p><ul><li>字符串</li><li>列表：键字符串的列表 <code>pyautogui.typewrite([&#39;a&#39;, &#39;b&#39;, &#39;left&#39;, &#39;left&#39;, &#39;X&#39;, &#39;Y&#39;])</code></li></ul></li><li><p>interval：在每个字符之间添加短时间暂停</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>对于 A 或 ! 这样的字符，pyautogui 将自动模拟按住 Shift 键。</p></div></li></ul></li></ul><h3 id="键名" tabindex="-1"><a class="header-anchor" href="#键名" aria-hidden="true">#</a> 键名</h3><p>不是所有的键都很容易用单个文本字符来表示。例如，如何把 Shift 键或左箭头键表示为单个字符？在 PyAutoGUI 中，这些键表示为短的字符值：&#39;esc&#39; 表示 Esc 键，&#39;enter&#39; 表示 Enter。</p><p><img src="`+c+`" alt="键盘02"></p><p><img src="https://s2.loli.net/2024/04/01/yxOThCNIUk4l2gW.png" alt="键盘"></p><ul><li>press() 按下按键</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui
<span class="token keyword">import</span> time

time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>typewrite<span class="token punctuation">(</span><span class="token string">&#39;Hello world!&#39;</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>
time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&#39;enter&#39;</span><span class="token punctuation">)</span>
time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>typewrite<span class="token punctuation">(</span><span class="token string">&#39;Hello world!&#39;</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="按下和释放键盘" tabindex="-1"><a class="header-anchor" href="#按下和释放键盘" aria-hidden="true">#</a> 按下和释放键盘</h3><p>就像 mouseDown() 和 mouseUp() 函数一样，pyautogui.keyDown() 和 pyautogui.keyUp() 将向计算发送虚拟的按键和释放。方便起见，pyautogui 提供了pyautogui.press() 函数，它调用这两个函数，模拟完整的击键。</p><ul><li>例子：打印出美元字符（通过按住 Shift 键并按 4 得到）</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui
<span class="token keyword">import</span> time

time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>keyDown<span class="token punctuation">(</span><span class="token string">&#39;shift&#39;</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>keyUp<span class="token punctuation">(</span><span class="token string">&#39;shift&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="热键组合" tabindex="-1"><a class="header-anchor" href="#热键组合" aria-hidden="true">#</a> 热键组合</h3><p>“热键”或“快捷键”是一种按键组合，它调用某种应用功能。拷贝选择内容的常用热键是 Ctrl-V。用户按住Ctrl键，然后按V键，然后释放V和Ctrl键。</p><p>用pyautogui的keyDown() 和keyUp() 函数来做到这一点</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui
<span class="token keyword">import</span> time

time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>keyDown<span class="token punctuation">(</span><span class="token string">&#39;shift&#39;</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&#39;v&#39;</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>keyUp<span class="token punctuation">(</span><span class="token string">&#39;shift&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这相当复杂。作为替代，可以使用 pyautogui.hotkey() 函数，它接受多个键字符串参数，按顺序按下，再按相反的顺序释放。例如对于 Ctrl-V，代码就像下面这样简单：</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui
<span class="token keyword">import</span> time

time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>hotkey<span class="token punctuation">(</span><span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;v&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><p>通过上面学习，现在你已经可以通过 pyautogui 库实现大部分自动化功能了。下面就给两个项目示例，具体的实现细节和操作方法就不详细叙述。</p><h3 id="项目一、微信自动化" tabindex="-1"><a class="header-anchor" href="#项目一、微信自动化" aria-hidden="true">#</a> 项目一、微信自动化</h3><p>微信官方给出的 pywx 已失效，则除了GUI别无他法自动化操作微信了。</p><p>项目介绍：自动搜索指定微信名的人，并发送指定的内容。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2
<span class="token keyword">import</span> pyperclip  <span class="token comment"># 用于复制粘贴的模块</span>
<span class="token keyword">import</span> pyautogui
<span class="token keyword">import</span> time

time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>


<span class="token comment"># 从屏幕screen中找到source的位置坐标(找到微信搜索框的位置)</span>
<span class="token keyword">def</span> <span class="token function">findImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    img <span class="token operator">=</span> pyautogui<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>
    img<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&#39;./screen.png&#39;</span><span class="token punctuation">)</span>
    screen <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./screen.png&#39;</span><span class="token punctuation">)</span>
    joinMeeting <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./wechat.png&#39;</span><span class="token punctuation">)</span>
    result <span class="token operator">=</span> cv2<span class="token punctuation">.</span>matchTemplate<span class="token punctuation">(</span>joinMeeting<span class="token punctuation">,</span> screen<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>TM_CCOEFF_NORMED<span class="token punctuation">)</span>
    pos_start <span class="token operator">=</span> cv2<span class="token punctuation">.</span>minMaxLoc<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>  <span class="token comment"># 获取最相似点相似坐标</span>
    x <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>pos_start<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>joinMeeting<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
    y <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>pos_start<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>joinMeeting<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> x<span class="token punctuation">,</span> y


<span class="token comment"># 向搜索框中录入要查找的好友名称:name好友名称，x，y搜索框位置</span>
<span class="token keyword">def</span> <span class="token function">send_name_to_search</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    pyautogui<span class="token punctuation">.</span>moveTo<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    pyautogui<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token comment"># 赋值好友名称</span>
    pyperclip<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    <span class="token comment"># 粘贴复制内容</span>
    pyautogui<span class="token punctuation">.</span>hotkey<span class="token punctuation">(</span><span class="token string">&#39;ctrl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;v&#39;</span><span class="token punctuation">)</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    pyautogui<span class="token punctuation">.</span>hotkey<span class="token punctuation">(</span><span class="token string">&#39;enter&#39;</span><span class="token punctuation">)</span>

    <span class="token comment"># 向下移动100个像素定位到搜索到第一个好友位置点击</span>
    pyautogui<span class="token punctuation">.</span>moveTo<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token operator">+</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    pyautogui<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token comment"># 向好友发送消息</span>
<span class="token keyword">def</span> <span class="token function">send_msg</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    pyperclip<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
    pyautogui<span class="token punctuation">.</span>hotkey<span class="token punctuation">(</span><span class="token string">&#39;ctrl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;v&#39;</span><span class="token punctuation">)</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    pyautogui<span class="token punctuation">.</span>hotkey<span class="token punctuation">(</span><span class="token string">&#39;enter&#39;</span><span class="token punctuation">)</span>


<span class="token comment"># 主要程序</span>
x<span class="token punctuation">,</span> y <span class="token operator">=</span> findImg<span class="token punctuation">(</span><span class="token punctuation">)</span>
send_name_to_search<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">&#39;文件传输助手&#39;</span><span class="token punctuation">)</span>
send_msg<span class="token punctuation">(</span><span class="token string">&#39;i love learn Python!!!&#39;</span><span class="token punctuation">)</span>
time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
send_msg<span class="token punctuation">(</span><span class="token string">&#39;i love learn Python!!!&#39;</span><span class="token punctuation">)</span>
time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="项目二、监视程序" tabindex="-1"><a class="header-anchor" href="#项目二、监视程序" aria-hidden="true">#</a> 项目二、监视程序</h3><p>项目介绍：定时截取电脑屏幕以及摄像头捕获照片并发送到指定邮箱。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui
<span class="token keyword">import</span> cv2
<span class="token keyword">import</span> yagmail
<span class="token comment"># import schedule</span>
<span class="token keyword">import</span> time


<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;开始监视......&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># 截取屏幕图片</span>
    myScreenshot <span class="token operator">=</span> pyautogui<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>
    myScreenshot<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">r&#39;screen.png&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># 基于cv2打开电脑摄像头，捕获实施照片</span>
    cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
    cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">&#39;photo.jpg&#39;</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span>
    <span class="token comment"># 关闭摄像头</span>
    cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>

    received <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;yourqq@qq.com&#39;</span><span class="token punctuation">]</span>
    yag <span class="token operator">=</span> yagmail<span class="token punctuation">.</span>SMTP<span class="token punctuation">(</span>user<span class="token operator">=</span><span class="token string">&#39;yourqq@qq.com&#39;</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">&#39;yourpassword&#39;</span><span class="token punctuation">,</span> 
                       host<span class="token operator">=</span><span class="token string">&#39;smtp.qq.com&#39;</span><span class="token punctuation">)</span>
    contents <span class="token operator">=</span> <span class="token punctuation">[</span>&#39;<span class="token operator">&lt;</span>b<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>font color<span class="token operator">=</span><span class="token string">&quot;#FF1493&quot;</span> size<span class="token operator">=</span><span class="token string">&quot;10&quot;</span><span class="token operator">&gt;</span> \\
    			大人您好，一切都在监视中，尽情放心！<span class="token operator">&lt;</span><span class="token operator">/</span>font<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">&gt;</span>&#39;<span class="token punctuation">,</span>
                <span class="token string">&quot;screen.png&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&#39;photo.jpg&#39;</span><span class="token punctuation">]</span>

    yag<span class="token punctuation">.</span>send<span class="token punctuation">(</span>received<span class="token punctuation">,</span> <span class="token string">&#39;来自小鬼侦探的报告&#39;</span><span class="token punctuation">,</span> contents<span class="token punctuation">)</span>


<span class="token comment"># schedule.every().minute.at(&quot;:30&quot;).do(run)</span>
<span class="token comment"># while True:</span>
<span class="token comment">#     schedule.run_pending()</span>
<span class="token comment">#     time.sleep(5)</span>

run<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,58);function b(g,y){const p=e("ExternalLinkIcon");return o(),i("div",null,[r,n("ul",null,[d,n("li",null,[k,n("ul",null,[n("li",null,[s("请打开一个绘图应用，如 Windows 上的 Paint，OS X 上的Paintbrush，或 Linux 上的 GNU Paint（如果没有绘图应用，可以使用 "),n("a",m,[s("在线绘图"),l(p)]),s("）")])])])]),v])}const x=t(u,[["render",b],["__file","GUIzidonghua.html.vue"]]);export{x as default};
