import{_ as t,r as d,o as r,c as l,a as e,b as s,d as a,e as i}from"./app-9e62998e.js";const o={},c=e("h2",{id:"简介",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),s(" 简介")],-1),p=e("p",null,"Redis（Remote Dictionary Server 远程字典服务） 是一个开源、支持网络、基于内存、可选持久性的键值对存储数据库，是 NoSQL 数据库。",-1),u=e("strong",null,"官方原版：",-1),h={href:"https://redis.io/",target:"_blank",rel:"noopener noreferrer"},v=e("strong",null,"中文官网：",-1),m={href:"https://www.redisdocs.com/zh-cn/",target:"_blank",rel:"noopener noreferrer"},g=e("strong",null,"命令参考：",-1),b={href:"https://redis.com.cn/",target:"_blank",rel:"noopener noreferrer"},k=e("strong",null,"入门教程：",-1),_={href:"https://www.runoob.com/redis",target:"_blank",rel:"noopener noreferrer"},x=i(`<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>网上教程或官网。</p><p>redis 安装成功以后，window 下的配置文件保存在软件安装目录下。如果是 mac 或者 linux，则默认安装在 <code>/etc/redis/redis.conf</code>。</p><h2 id="核心配置" tabindex="-1"><a class="header-anchor" href="#核心配置" aria-hidden="true">#</a> 核心配置</h2><p><strong>绑定ip：</strong> 访问白名单，如果需要远程访问，可将此注释，或绑定1个真实ip。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">bind</span> <span class="token number">127.0</span>.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>端⼝：</strong> 默认为6379。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>port <span class="token number">6379</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>是否以守护进程运行：</strong></p><ul><li>如果以守护进程运行，则不会在命令阻塞，类似于服务</li><li>如果以守护进程运行，则当前终端被阻塞</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>daemonize <span class="token function">yes</span>  <span class="token comment"># 设置为yes表示守护进程，设置为no表示⾮守护进程，推荐设置为yes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>RDB持久化的备份策略：</strong></p><p>RDB 备份是默认开启的。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token comment"># save 时间 读写次数</span>
 save <span class="token number">900</span> <span class="token number">1</span>     <span class="token comment"># 当redis在900内至少有1次读写操作，则触发一次数据库的备份操作</span>
 save <span class="token number">300</span> <span class="token number">10</span>    <span class="token comment"># 当redis在300内至少有10次读写操作，则触发一次数据库的备份操作</span>
 save <span class="token number">60</span> <span class="token number">10000</span>  <span class="token comment"># 当redis在60内至少有10000次读写操作，则触发一次数据库的备份操作</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>RDB持久化的备份文件：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>dbfilename dump.rdb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>RDB持久化数据库数据文件的所在目录：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">dir</span> <span class="token operator">&lt;</span>目录<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>日志文件目录：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>loglevel notice
logfile /var/log/redis/redis-server.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>数据库数量：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>database <span class="token number">16</span>  <span class="token comment"># 默认有16个</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>登录密码：</strong></p><ul><li>生产阶段打开，开发阶段一般都是注释掉。</li><li>redis 在6.0版本以后新增了 ACL 访问控制机制，新增了用户管理，这个版本以后才有账号和密码。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>requirepass <span class="token operator">&lt;</span>密码<span class="token operator">&gt;</span>  <span class="token comment"># 登录 redis-cli -p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,25),f=e("strong",null,"参考：",-1),y={href:"https://blog.csdn.net/qq_32711989/article/details/108528352",target:"_blank",rel:"noopener noreferrer"},w=i(`<p><strong>AOF持久化的开启配置项：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>appendonly no  <span class="token comment"># 默认值是no，关闭状态</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>AOF持久化的备份文件：</strong></p><p>AOF 的备份数据文件与 RDB 的备份数据文件保存在同一个目录下，由 dir 配置项指定。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>appendfilename <span class="token string">&quot;appendonly.aof&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>AOF持久化备份策略：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># appendfsync always</span>
appendfsync everysec    <span class="token comment"># 工作中最常用。每一秒备份一次</span>
<span class="token comment"># appendfsync no</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>RDB 与 AOF参考：</strong></p>`,8),R=e("strong",null,"Redis 两种持久化机制RDB和AOF详解:",-1),z={href:"https://zhuanlan.zhihu.com/p/100885432",target:"_blank",rel:"noopener noreferrer"},B=i(`<h2 id="启动服务" tabindex="-1"><a class="header-anchor" href="#启动服务" aria-hidden="true">#</a> 启动服务</h2><p><strong>启动服务：</strong> <code>redis-server --service-start</code></p><p><strong>停止服务：</strong> <code>redis-server --service-stop</code></p><div class="hint-container tip"><p class="hint-container-title">注意</p><ul><li>可以直接使用 <code>redis-server</code> 启动，但是关闭了终端后服务会终止。</li><li>可以使用 <code>reddis-server &lt;配置文件地址&gt;</code> 加载配置文件。</li></ul></div><p><strong>连接：</strong> <code>redis-cli -h &lt;ip&gt; -p &lt;端口&gt;</code></p><h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h2><p>Redis提供的数据类型主要分为5种自有类型和一种自定义类型，这5种自有类型包括：String类型、哈希类型、列表类型、集合类型和顺序集合类型。</p><h3 id="字符串-string" tabindex="-1"><a class="header-anchor" href="#字符串-string" aria-hidden="true">#</a> 字符串（string）</h3><p>单个数据的最大容量是512M。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>key: 值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong> redis 中的所有数据操作，如果设置的键不存在则为添加，如果设置的键已经存在则修改。</p></blockquote><h3 id="哈希-hash" tabindex="-1"><a class="header-anchor" href="#哈希-hash" aria-hidden="true">#</a> 哈希（hash）</h3><p>用于存储字典，字典的结构为键值对。域、值的类型都为 string，域在 <strong>同一个 hash</strong> 中是唯一的。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>key:{
    域（属性）: 值，
    域:值，            
    域:值，
    ...
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="列表-list" tabindex="-1"><a class="header-anchor" href="#列表-list" aria-hidden="true">#</a> 列表（list）</h3><p>它的子成员类型为 string。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>key: [值1，值2, 值3, ...]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="无序集合-set" tabindex="-1"><a class="header-anchor" href="#无序集合-set" aria-hidden="true">#</a> 无序集合（set）</h3><p>它的子成员类型为 string 类型，元素唯一不重复，没有修改操作。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>key: {值1, 值4, 值3, ...}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="有序集合-zset" tabindex="-1"><a class="header-anchor" href="#有序集合-zset" aria-hidden="true">#</a> 有序集合（zset）</h3><p>它的子成员值的类型为 string 类型，元素唯一不重复，没有修改操作。权重值从小到大排列。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>key: {
    值1 权重值1(数字);
    值2 权重值2;
    值3 权重值3;
    值4 权重值4;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="python操作redis" tabindex="-1"><a class="header-anchor" href="#python操作redis" aria-hidden="true">#</a> Python操作redis</h2><p>使用 reidis 模块实现。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> redis

pool <span class="token operator">=</span> redis<span class="token punctuation">.</span>ConnectionPool<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">6379</span><span class="token punctuation">,</span> decode_responses<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
db <span class="token operator">=</span> redis<span class="token punctuation">.</span>Redis<span class="token punctuation">(</span>connection_pool<span class="token operator">=</span>pool<span class="token punctuation">)</span>
db<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Mjx&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>重要参数：</strong></p><ul><li><code>max_connections</code> ：最大连接数</li><li><code>decode_responses</code> ：是否解码</li><li><code>socket_connect_timeout</code> ：连接超时时间</li></ul>`,28);function D(q,A){const n=d("ExternalLinkIcon");return r(),l("div",null,[c,p,e("p",null,[u,s(),e("a",h,[s("https://redis.io"),a(n)])]),e("p",null,[v,s(),e("a",m,[s("https://www.redisdocs.com/zh-cn"),a(n)])]),e("p",null,[g,s(),e("a",b,[s("https://redis.com.cn"),a(n)])]),e("p",null,[k,s(),e("a",_,[s("https://www.runoob.com/redis"),a(n)])]),x,e("p",null,[f,s(),e("a",y,[s("Redis设置临时密码、永久密码、取消密码"),a(n)])]),w,e("p",null,[R,s(),e("a",z,[s("https://zhuanlan.zhihu.com/p/100885432"),a(n)])]),B])}const O=t(o,[["render",D],["__file","Redis.html.vue"]]);export{O as default};
