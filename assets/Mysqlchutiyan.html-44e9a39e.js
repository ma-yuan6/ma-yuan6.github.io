import{_ as e,r as t,o as l,c as o,a,b as s,d as i,e as d}from"./app-d188f79b.js";const r={},p=a("h2",{id:"安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),s(" 安装")],-1),c={href:"https://downloads.mysql.com/archives/community/",target:"_blank",rel:"noopener noreferrer"},u=d(`<ol><li>下载 MySQL</li><li>解压文件</li><li>安装</li><li>设置环境变量</li></ol><p>Linux 下载命令如下：</p><p><strong>Ubuntu：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> mysql-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Centos：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> mysql-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="启动服务" tabindex="-1"><a class="header-anchor" href="#启动服务" aria-hidden="true">#</a> 启动服务</h2><p>接下来我们就可以启动 Mysql 服务了（以 Linux 为例）。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>一旦安装完成，MySQL 服务将会自动启动。想要查看 MySQL 服务器是否正在运行，可以输入：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl status mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://s2.loli.net/2024/03/18/AKH8imhoVwOsck1.png" alt="image-20231105165547162"></p><p><strong>补充：</strong></p><p>想要停止 Mysql 服务，可以使用下面命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl stop mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在MySQL 8.0上，root 用户默认通过<code>auth_socket</code>插件授权。<code>auth_socket</code>插件通过 Unix socket 文件来验证所有连接到<code>localhost</code>的用户。你可以以 root 用户身份直接登录 MySQL 服务器，不用提供密码。</p><p>以 root 用户身份登录 MySQL服务器，输入：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样就进入到了 Mysql 的交互界面了。</p><h2 id="mysql管理" tabindex="-1"><a class="header-anchor" href="#mysql管理" aria-hidden="true">#</a> MYSQL管理</h2><p><strong>版本不同命令也有些许不同这里以8.0版本为例。</strong></p><h3 id="创建用户" tabindex="-1"><a class="header-anchor" href="#创建用户" aria-hidden="true">#</a> 创建用户</h3><p><strong>命令：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CREATE USER &#39;username&#39;@&#39;host&#39; IDENTIFIED BY &#39;password&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>说明：</strong></p><ul><li>username：你将创建的用户名。</li><li>host：指定该用户在哪个主机上可以登陆，如果是本地用户可用 localhost，如果想让该用户可以从任意远程主机登陆可以使用通配符 % 。</li><li>password：该用户的登陆密码。密码如果为空，则该用户可以不需要密码登陆服务器。</li></ul><p><strong>所有对密码的操作都会自动加密密码</strong></p><p><strong>例子：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token string">&#39;root&#39;</span><span class="token variable">@&#39;localhost&#39;</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span> <span class="token comment">-- 本地用户,指定密码</span>
<span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token string">&#39;ma&#39;</span><span class="token variable">@&#39;192.168.1.101&#39;</span> IDENDIFIED <span class="token keyword">BY</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span> <span class="token comment">-- 指定IP,指定密码</span>
<span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token string">&#39;ma&#39;</span><span class="token variable">@&#39;%&#39;</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span> <span class="token comment">-- 不限IP,指定密码</span>
<span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token string">&#39;ma&#39;</span><span class="token variable">@&#39;%&#39;</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span> <span class="token comment">-- 不限IP,空密码</span>
<span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token string">&#39;ma&#39;</span><span class="token variable">@&#39;%&#39;</span><span class="token punctuation">;</span>  <span class="token comment">-- 不限IP,空密码</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看用户" tabindex="-1"><a class="header-anchor" href="#查看用户" aria-hidden="true">#</a> 查看用户</h3><p>在MySQL中，用户信息存储在名为mysql.user的系统表中。可以使用 SELECT 命令查询 mysql.user 表来获取用户信息。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>host<span class="token punctuation">\`</span></span> <span class="token keyword">FROM</span> mysql<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="删除用户" tabindex="-1"><a class="header-anchor" href="#删除用户" aria-hidden="true">#</a> 删除用户</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">USER</span> <span class="token string">&#39;username&#39;</span><span class="token variable">@&#39;host&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="更改密码" tabindex="-1"><a class="header-anchor" href="#更改密码" aria-hidden="true">#</a> 更改密码</h3><p><strong>命令：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SET PASSWORD FOR &#39;username&#39;@&#39;host&#39; = &#39;newpassword&#39;;
SET PASSWORD = &#39;newpassword&#39;;  -- 如果是当前登陆用户
-- 第二种方式
ALTER USER &#39;username&#39;@&#39;host&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;;  
-- MYSQL8 要这样才能使用账号登录登录，如果是 MYSQL8 遇到登陆问题只要这样修改一下密码就行。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>例子：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> PASSWORD <span class="token keyword">FOR</span> <span class="token string">&#39;ma&#39;</span><span class="token variable">@&#39;host&#39;</span> <span class="token operator">=</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="授与权限" tabindex="-1"><a class="header-anchor" href="#授与权限" aria-hidden="true">#</a> 授与权限</h3><p><strong>命令：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> GRANT all privileges on *.* to &#39;ma&#39;@&#39;host&#39; with grant option;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>说明：</strong></p><ul><li>all privileges：表示将所有权限授予给用户。也可指定具体的权限，如：<code>SELECT、CREATE、DROP</code> 等。</li><li>on：表示这些权限对哪些数据库和表生效，格式：<code>数据库名.表名</code>，这里写 “*” 表示所有数据库，所有表。如果我要指定将权限应用到 test 库的 user 表中，可以这么写：<code>test.user</code>。</li><li>to：将权限授予哪个用户。格式：<code>用户名 @ 登录IP或域名</code>。% 表示没有限制，在任何主机都都可以登录如：”yangxin”@”192.168.0.%”，表示 yangxin 这个用户只能在 192.168.0 IP段登录。</li><li>with grant option：表示允许用户将自己的权限授权给其它用户。</li></ul><p>可以使用 GRANT 给用户添加权限，<strong>权限会自动叠加，不会覆盖之前授予的权限</strong>，比如你先给用户添加一个 SELECT 权限，后来又给用户添加了一个 INSERT 权限，那么该用户就同时拥有了 SELECT 和 INSERT 权。</p><p><strong>例子：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">GRANT</span> <span class="token keyword">all</span> <span class="token keyword">privileges</span> <span class="token keyword">ON</span> test<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">&#39;ma&#39;</span><span class="token variable">@&#39;127.0.0.1&#39;</span><span class="token punctuation">;</span> 
<span class="token keyword">GRANT</span> <span class="token keyword">all</span> <span class="token keyword">privileges</span> <span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">&#39;root&#39;</span><span class="token variable">@&#39;127.0.0.1&#39;</span> <span class="token keyword">WITH</span> <span class="token keyword">GRANT</span> <span class="token keyword">OPTION</span><span class="token punctuation">;</span>  <span class="token comment">-- 最高权限</span>
flush <span class="token keyword">privileges</span><span class="token punctuation">;</span>  <span class="token comment">-- 刷新授权</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>不要忘了刷新授权哦!😃</strong></p><h3 id="查看权限" tabindex="-1"><a class="header-anchor" href="#查看权限" aria-hidden="true">#</a> 查看权限</h3><p><strong>命令：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SHOW GRANTS FOR &#39;username&#39;@&#39;host&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="撤销权限" tabindex="-1"><a class="header-anchor" href="#撤销权限" aria-hidden="true">#</a> 撤销权限</h3><p><strong>命令：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>REVOKE all privileges ON databasename.tablename FROM &#39;username&#39;@&#39;host&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>privilege、databasename、tablename</code>同授权部分。</p><p><strong>某用户具体有哪些权限可以用命令下面查看：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> GRANTS <span class="token keyword">FOR</span> <span class="token string">&#39;ma&#39;</span><span class="token variable">@&#39;host&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,57);function k(v,m){const n=t("ExternalLinkIcon");return l(),o("div",null,[p,a("p",null,[s("Windows 和 Mac 需要到 "),a("a",c,[s("官网"),i(n)]),s(" 下载。就以下三步这里就不赘述了，可以自行网上查询。")]),u])}const h=e(r,[["render",k],["__file","Mysqlchutiyan.html.vue"]]);export{h as default};
